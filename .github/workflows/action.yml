name: pipeline

on:
  push:
    branches: 
      - develop
      - main
  pull_request:
    branches:
      - '*'

jobs:
  cache-modules:
    runs-on: ubuntu-latest
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v2
    
    - name: ⚡ Use GoLang
      uses: actions/setup-go@v3
      with:
        go-version: '1.20.1'
        cache: true
        cache-dependency-path: |
          **/go.sum
          **/go.mod

    - name: 🧰 Install dependencies
      run: |
        make install
        make download

  ci:
    needs: cache-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [env, guid, httpw, logging, metrics, rabbitmq, secrets_manager, sql, tracing]
    steps:
      - name: 📁 Checkout repository
        uses: actions/checkout@v2
      
      - name: ⚡ Use GoLang
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.1'
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: 🔧 Install golangci
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
            
      - name: 🔎 Run Lint
        run: |
          cd ./${{ matrix.service }}
          golangci-lint run \
            --out-format=github-actions \
            --print-issued-lines=false \
            --print-linter-name=false \
            --issues-exit-code=0 \
            --enable=revive \
            -- ./... > golanci-report.xml

      - name: 🔎 Run tests
        run: |
          cd ./${{ matrix.service }} && go test ./... -v -covermode atomic -coverprofile=coverage.out

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./${{ matrix.service }}/

  tag_build:
    needs: ci
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: semvers
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
            version: ${{ steps.previoustag.outputs.tag }}

      - name: Release Version
        run: |
          git tag ${{ steps.semvers.outputs.v_patch }}
          git push origin ${{ steps.semvers.outputs.v_patch }}